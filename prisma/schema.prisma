generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PRICE_CATEGORY {
  CHEAP
  REGULAR
  EXPENSIVE
}

model Restaurant {
  id                      Int            @id @default(autoincrement())
  name                    String         @unique
  slug                    String         @unique
  price_category          PRICE_CATEGORY
  main_image              String
  images                  String[]
  description             String
  open_time               String
  close_time              String
  max_seat_number         Int            @default(4)
  min_seat_number         Int            @default(1)
  max_reservations_number Int            @default(2)
  created_at              DateTime       @default(now())
  udpated_at              DateTime       @updatedAt
  items                   Item[]
  location_id             Int
  location                Location       @relation(fields: [location_id], references: [id])
  cuisine_id              Int
  cuisine                 Cuisine        @relation(fields: [cuisine_id], references: [id])
  reviews                 Review[]
  bookings                Booking[]
}

model Booking {
  id               Int        @id @default(autoincrement())
  number_of_people Int
  booking_date     String
  booking_time     String
  user_id          Int
  restaurant_id    Int
  user             User       @relation(fields: [user_id], references: [id])
  restaurant       Restaurant @relation(fields: [restaurant_id], references: [id])
}

model Item {
  id            Int        @id @default(autoincrement())
  name          String
  price         Float
  description   String
  created_at    DateTime   @default(now())
  udpated_at    DateTime   @updatedAt
  restaurant_id Int
  restaurant    Restaurant @relation(fields: [restaurant_id], references: [id])
}

model Location {
  id         Int          @id @default(autoincrement())
  name       String
  created_at DateTime     @default(now())
  udpated_at DateTime     @updatedAt
  restuarnts Restaurant[]
}

model Cuisine {
  id         Int          @id @default(autoincrement())
  name       String
  created_at DateTime     @default(now())
  udpated_at DateTime     @updatedAt
  restuarnts Restaurant[]
}

model User {
  id         Int       @id @default(autoincrement())
  first_name String
  last_name  String
  password   String
  city       String
  email      String    @unique
  phone      String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  reviews    Review[]
  bookings   Booking[]
}

model Review {
  id            Int        @id @default(autoincrement())
  text          String
  rating        Float
  created_at    DateTime   @default(now())
  updated_at    DateTime   @updatedAt
  restaurant_id Int
  user_id       Int
  user          User       @relation(fields: [user_id], references: [id])
  restaurant    Restaurant @relation(fields: [restaurant_id], references: [id])
}
